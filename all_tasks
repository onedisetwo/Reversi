#include <iostream>
#include <vector>
#include <string>
#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")
#define debug; cin>>debugx;

using namespace std;

vector<vector<short> > board(9);
short player_now=1, task_number;
bool debugx;

void board_start(){ //изменение размера и заполнение до стартовой позиции
    for(int i=0;i<9;i++){
        board[i].resize(9);
    }
    for(int i=0;i<9;i++){
        for(int k=0;k<9;k++){
            board[i][k]=0;
            if(i==4 & k==4 || i==5 & k==5){
                board[i][k]=1;
            }
            if(i==5 & k==4 || i==4 & k==5){
                board[i][k]=2;
            }
        }
    }
}

void board_input(){
    for(int i=1;i<9;i++){
        string s;
        cin>>s;
        for(int k=1;k<9;k++){
            board[k][9-i]=(int)(s[k-1])-48;
        }
    }
}

void board_print(){ //напечатать доску
    for(int i=8;i>0;i--){
        for(int k=1;k<9;k++){
            cout<<board[i][k];
        }
        cout<<endl;
    }
}

void move_make1(short x,short y){ //ход через два числа
    board[y][x]=player_now;
    player_now=1;
    if(player_now>2)
        player_now=1;
/* первая коорд. - буква, вторая цифра. т.е.
5 - - - - -
4 - - - - -
3 - - - - -
2 - - - - -
1 - - - - -
- A B C D E
*/
}

void move_make2(string s){ //ход через строку вида #A3
    move_make1((int)(s[0])-64,(int)(s[1])-48);
}

string numb_latin(short x, short y){
    string s="00";
    s[0]=(char)(x+64);
    s[1]=(char)(y+48);
    return s;
}

vector<vector<short> > move_variants(){
    for(int i=0;i<9;i++){
        for(int k=0;k<9;k++){

        }
    }
}

vector<short> wincheck_3(){
    vector<short> v(3,0);
    for(int i=1;i<9;i++){
        for(int k=1;k<9;k++){
            v[board[i][k]]++;
        }
    }
    if(v[1]>v[2])
        v[0]=1;
    if(v[2]>v[1])
        v[0]=2;
    if(v[1]==v[2])
        v[0]=0;
    return v;
}

short wincheck_player(){
    return wincheck_3()[0];
}

void task1(){
    board_input();
    int s=0;
    for(int i=1;i<9;i++){
        for(int k=1;k<9;k++){
            if(board[i][k]!=0){
                s++;
            }
        }
    }
    cout<<s-4;
}

void task2(){
    board_input();
    for(auto i:wincheck_3()){
        cout<<i<<" ";
    }
}

void task_switch(){
    switch(task_number){
    case 1: //+
        task1();
        break;
    case 2: //+
        task2();
        break;
    case 5:
        task5();
        break;
    }
}

int main()
{
    board_start();
    cin>>task_number;
    task_switch();
}
